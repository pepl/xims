<?xml version="1.0" encoding="UTF-8"?>
<article>
  <title>XIMS-Whitepaper Working Draft</title>

  <articleinfo>
    <authorgroup>
      <author>
        <firstname>Michael</firstname>

        <surname>Kröll</surname>

        <affiliation>
          <orgname>University of Innsbruck</orgname>
        </affiliation>

        <authorblurb>
          <para><email>michael.kroell@uibk.ac.at</email></para>
        </authorblurb>
      </author>

      <author>
        <firstname>Christian</firstname>

        <surname>Glahn</surname>

        <affiliation>
          <orgname>University of Innsbruck</orgname>
        </affiliation>

        <authorblurb>
          <para><email>christian.glahn@uibk.ac.at</email></para>
        </authorblurb>
      </author>
    </authorgroup>

    <revhistory>
      <revision>
        <revnumber>$Revision$</revnumber>

        <date>$Date$</date>

        <revremark></revremark>
      </revision>
    </revhistory>

    <legalnotice>
      <para>Copyright © 2002</para>
    </legalnotice>
  </articleinfo>

  <section>
    <title>Introduction</title>

    <para>XIMS is a flexible web based content management and information
    system, built to especially suit the needs of academic and educational
    infrastructures. The XIMS project initially started out as a side project
    of the reorganization and redesign of the website of the University of
    Innsbruck, to create a small and simple content management system to
    manage the University&#39;s public web pages. Inspired by an existing
    information system that was created and used by the Department of
    Computing Services and an evaluation of the needs of the University of
    Innsbruck, that intent of pure web content management shifted to the
    creation of a more generic content management system, which also should be
    used as an information and communication system. During that early
    planning stages the following major design goals were developed. For the
    sake of brevity, XIMS&#39; implementation concepts to reach those goals
    have been merged with the corresponding items.</para>
  </section>

  <section>
    <title>Design Goals and Features</title>

    <section>
      <title>Open and Standards-Based</title>

      <para>XIMS is not based on proprietary technologies like internal data
      repositories or self-made scripting or query languages. As the data is
      by default stored in widely used RDBMS (currently Oracle and PostgreSQL
      are supported), it is possible to directly interface XIMS content via
      JDBC or ODBC. On the other hand, it is also possible to plug in
      non-RDBMS data storage providers.</para>

      <para>Document bodies are stored in XHTML 1.0 <footnote><para><ulink
      url="http://www.w3.org/TR/xhtml1/"> http://www.w3.org/TR/xhtml1/</ulink>
      (a reformulation of HTML 4 in XML 1.0)</para></footnote> and rendered
      with their corresponding XSLT <footnote><para><ulink
      url="http://www.w3.org/Style/XSL/"> http://www.w3.org/Style/XSL/</ulink></para></footnote>
      stylesheets. XIMS content metadata adopts the Dublin Core Metadata
      Element Set, Version 1.1 <footnote><para><ulink
      url="http://www.dublincore.org/documents/dces/">
      http://www.dublincore.org/documents/dces/</ulink></para></footnote> ,
      and is output using RDF <footnote><para><ulink
      url="http://www.w3.org/RDF/"> http://www.w3.org/RDF/</ulink></para></footnote>
      for public web page content.</para>

      <para>Internally, all data is stored in XML DOM <footnote><para><ulink
      url="http://www.w3.org/XML/">Extensible Markup Language</ulink> and
      <ulink url="http://www.w3.org/DOM/">Document Object Model</ulink></para></footnote>
      data-structures; therefore, information handling is done through
      formalized interfaces.</para>

      <para>Because of the use of compulsive metadata and hierarchically
      structured data storage, XIMS content is open for integration into a
      Semantic Web <footnote><para><ulink url="http://www.w3.org/2001/sw/">
      http://www.w3.org/2001/sw/</ulink> (see also: <ulink
      url="http://www.ontoknowledge.org/oil/">
      http://www.ontoknowledge.org/oil/</ulink> )</para></footnote> scenario.</para>

      <para>Structured, hierarchical data storage supports and increases
      efficiency for database crawling and data-mining tools. XIMS provides a
      special programming interface in order to enable easy access to metadata
      stored.</para>
    </section>

    <section>
      <title>Reduction of website staff workload</title>

      <para>Website staff workload can be drastically reduced by separation of
      content and style using XML/XSL technologies and safe delegation of
      content authoring. Especially in university environments, autonomy of
      content managers is important, a fact reflecting the usually weak or
      loose hierarchies of such organizations.</para>

      <para>XIMS is heavily based on XML/XSL technologies leaving content to
      content providers and style issues to designers. By using XIMS&#39;s
      fine-grained access control mechanisms, content authoring can be safely
      delegated to organizational units like university departments, for
      example. The delegation of rights includes the creation and use of
      XSL-stylesheets, of course, enabling highly customized user interfaces
      to XIMS.</para>

      <para>Because most users who provide hyperlinked information have no
      time or no intention to check link validity on a regular basis, XIMS
      offers several options to ensure that referential hyperlinks are
      up-to-date.</para>

      <section>
        <title>Validity of internal links</title>

        <para>XIMS tracks the hyperlinked structure of the content.
        Consequently, internal links will not break if the location of the
        linked content changes.</para>
      </section>

      <section>
        <title>Validity of external links</title>

        <para>XIMS users can specify if external hyperlinks in their documents
        should be monitored or not. In addition to the inline external
        hyperlinks management, XIMS enables the creation and maintenance of
        small link archives using <emphasis>link objects</emphasis> .</para>

        <para>XIMS will provide an API to support external link-validation
        crawlers. The validation of external references can be automated and
        authors can be notified as soon as their links were found broken.</para>
      </section>

      <section>
        <title>Symbolic links</title>

        <para>XIMS&#39;s <emphasis>symbolic link objects</emphasis> provide
        two major benefits: <orderedlist numeration="arabic"><listitem><para>Simplification
        of base URLs and facilitation of virtual-server hosting: XIMS may hide
        the hierarchical location of content by using symbolic name aliases.
        Thus, XIMS enables simple URLs like
        http://host.domain/department-name/ which actually point to
        http://host.domain/faculties/departments/department-name/. Such
        mappings, symbolic name to department-name as in the just mentioned
        example, can also be used to dynamically generate virtual hosts
        webserver configurations, thus enabling URLs like
        http://department-name.domain/.</para></listitem><listitem><para>The
        use of symbolic link objects can be used transparently. On the
        user-level, URL style links, like http://host.domain/department-name/,
        or http://host.domain/department-name/staff/someone/ are only made
        visible. Users don&#39;t have to bother with URLs like
        http://host.domain/show?id=number</para></listitem></orderedlist></para>
      </section>
    </section>

    <section>
      <title>Simplification and acceleration of content authoring</title>

      <para>Because of the ease of use of the in-browser-WYSIWYG-editor used
      by XIMS, content can be created and edited by more people in a much
      faster way. The familiar Microsoft-Word-like look and feel helps staff
      to deliver their content without the long learning phase of additional
      HTML-editors.</para>

      <para>XIMS supports structural content organisation and syndication
      known from web-portals, where different users can manage the content of
      their <quote>portlet</quote> , indirectly collaborating for the common
      portal-page. The University of Innsbruck&#39;s homepage for its staff
      and students, <ulink url="http://www2.uibk.ac.at/ipoint/">iPoint</ulink>
      , is a first example of content providers managing their portlets.</para>
    </section>

    <section>
      <title>Secure information management</title>

      <para>By means of a flexible recursive role and ACL model, XIMS provides
      the possibility of secure information management , easily enabling safe
      delegation of content management, like cross-department working groups,
      for example.</para>

      <para>Using cascaded request handling, the system can customize the
      content shown to the user. It will transparently decide whether certain
      content or links can be accessed by the client or not.</para>
    </section>

    <section>
      <title>Auditing and quality controls</title>

      <para>Along with optional auditing possibilities of customizable
      granularity, XIMS provides means of quality control on several levels:</para>

      <itemizedlist mark="bullet">
        <listitem>
          <para>Content level</para>

          <orderedlist numeration="arabic">
            <listitem>
              <para>Verification of external and internal links in documents,
              including detection or prevention of publishing of orphaned
              objects.</para>
            </listitem>

            <listitem>
              <para>Well-formedness conversion and check of document bodies</para>
            </listitem>
          </orderedlist>
        </listitem>

        <listitem>
          <para>Style level</para>

          <orderedlist numeration="arabic">
            <listitem>
              <para>Possibility to control design independently from content,
              enabling corporate designs throughout different organizational
              units</para>
            </listitem>

            <listitem>
              <para>Possibility to provide different styles for disjunct
              usergroups, including different customized views.</para>
            </listitem>
          </orderedlist>
        </listitem>
      </itemizedlist>
    </section>

    <section>
      <title>Powerful search capabilities</title>

      <para>You can choose between different modules for searching XIMS
      managed content. Currently, modules for &#34;vanilla&#34; SQL and for
      the powerful indexing and retrieval possibilities of Oracle interMedia
      <footnote><para><ulink
      url="http://technet.oracle.com/products/intermedia/"> Oracle interMedia</ulink></para></footnote>
      search technologies in order to improve content search capabilities.
      interMedia supports indexing of various document formats, amongst them
      Adobe PDF and Microsoft Word files. One of the search features provided
      by interMedia is field based searching, enabling queries similar to
      <quote>dc.author=smith</quote> , for example. Other features include
      <ulink
      url="http://technet.oracle.com/products/text/htdocs/text_xml_901.html">
      XPath searching</ulink> stemming, phonetic, fuzzy, and proximity
      searches, as well as synonym searching using (custom) Thesauri.</para>
    </section>

    <section>
      <title>Flexible application generation</title>

      <para>The generic and open design of XIMS provides the possibility to
      create applications or modules extending XIMS&#39;s standard document
      management features. Examples of such customized applications or modules
      include portal pages, several kinds of fori (Discussion Fori, Support
      Fori, ...), a bibliographic catalog (BiDok), a PDF-Presentation module
      (AxPoint), a DocBook documents module, and a link collection
      application.</para>
    </section>

    <section>
      <title>Networked content sharing</title>

      <para>It is possible to perform SOAP <footnote><para><ulink
      url="http://www.develop.com/soap/">Simple Object Access Protocol (SOAP)</ulink></para></footnote>
      based exchange across different XIMS installations using one or multiple
      web servers, leaving storage and staging up to the <quote>master</quote>
      installation, enabling several stages of server clustering.</para>

      <para>Such a XIMS <quote>master</quote> can serve public content, for
      example, while both administration and data-storage happen at dislocated
      slave-servers.</para>

      <para>Thus, XIMS can be used to create content-communities that share
      content on one data level without necessarily using identical
      user-spaces, therefore, XIMS is helping to organize trans-institutional
      content sharing scenarios.</para>
    </section>
  </section>

  <section>
    <title>Technical Implementation</title>

    <section>
      <title>Developers Reference</title>

      <para>Please follow <ulink url="./developers/">this</ulink>
      link for details on the technical implementation.</para>
    </section>

    <section>
      <title>Application examples</title>

      <section>
        <title>Discussion forum</title>

        <para>A very basic and simple discussion forum consists of discussion
        contributions organized in threads. With XIMS, such a forum can be
        established rather easily: All that is needed are two object types and
        their <ulink
        url="developers/xims-developer_s-guide.sdbk#WritingaximsModule">module</ulink>
        implementations, (a) <emphasis>Discussion Forum</emphasis> storing the
        topic and forum-wide attributes, and (b) <emphasis>Discussion
        Contribution</emphasis> handling discussion entries. A discussion
        thread is started when one entry refers to another entry as parent_id
        , i.e. a reply to a message.</para>

        <para>An example for a Discussion forum application in action is:
        <ulink
        url="http://www2.uibk.ac.at/forschung/alpine_vorzeit/diskussionsforum/">The
        Ice-Man Discussion Forum</ulink>, University of Innsbruck, September
        2001</para>
      </section>

      <section>
        <title>A simple bibliographic catalog</title>

        <para>Similar to the discussion forum example there is little to be
        added to implement a simple bibliographic catalog with XIMS. A
        non-hierarchic catalog could be created using two classes/object
        types: <emphasis>Bibliographic Catalog</emphasis> as a subclass of the
        folder-class and <emphasis>Bibliographic Catalog Entry</emphasis> as a
        subclass of the document-class. Catalog specific metadata could be
        stored and manipulated by the latter as XML-formatted string in
        <emphasis>CONTENT.attributes</emphasis> encapsulating its storage
        details to the scripts.</para>

        <para>Hierarchic catalogs could be implemented by adding a subclass of
        the <emphasis>Bibliographic Catalog</emphasis> folder-class called
        <emphasis>Bibliographic Catalog Category</emphasis> .</para>
      </section>
    </section>

    <section>
      <title>Test-Drive the current XIMS beta</title>

      <para><ulink url="/goxims/user">Login</ulink> with username
      &#34;xgu&#34; and password &#34;xgu&#34;</para>
    </section>

    <section>
      <title>Key Technologies Used</title>

      <itemizedlist>
        <listitem>
          <para><ulink url="http://www.perl.org/">Perl</ulink></para>
        </listitem>

        <listitem>
          <para><ulink url="http://www.gnome.org/">Gnome</ulink>&#39;s <ulink
          url="http://www.xmlsoft.org/">libxml2</ulink>, <ulink
          url="http://xmlsoft.org/XSLT/">libxslt</ulink> and its Perl
          interfaces <ulink
          url="http://search.cpan.org/search?dist=XML-LibXML">XML::LibXML</ulink>
          and <ulink url="http://search.cpan.org/search?dist=XML-LibXSLT">XML::LibXSLT</ulink></para>
        </listitem>

        <listitem>
          <para><ulink
          url="http://search.cpan.org/search?dist=CGI-XMLApplication">CGI-XMLApplication</ulink></para>
        </listitem>

        <listitem>
          <para><ulink url="http://httpd.apache.org/">Apache HTTP Server</ulink></para>
        </listitem>

        <listitem>
          <para><ulink url="http://perl.apache.org/">mod_perl</ulink> - The
          Apache/Perl Integration Project</para>
        </listitem>

        <listitem>
          <para><ulink url="http://axkit.org/">AxKit</ulink> XML Application
          Server</para>
        </listitem>
      </itemizedlist>
    </section>
  </section>

  <section>
    <title>Future Plans</title>

    <para>Workflow-Management</para>

    <para>Versioning (Neon (DAV), Subversion (DeltaV))</para>

    <para>Semantic Web Concepts</para>

    <para>Educational Content Providing, Learning System, EML (?)</para>

    <para>XACLML, ACL-Draft IETF</para>

    <para>Xopus, Bitflux</para>
  </section>

  <section>
    <title>Conclusion</title>

    <para>...</para>

    <para>TODO:</para>

    <itemizedlist mark="bullet">
      <listitem>
        <para>AxKit integration using SAWA</para>
      </listitem>

      <listitem>
        <para>Abstract, conclusion, future plans</para>
      </listitem>
    </itemizedlist>
  </section>
</article>